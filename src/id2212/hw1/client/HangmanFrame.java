/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package id2212.hw1.client;

import java.awt.Container;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;

/**
 *
 * @author alfredo
 */



public class HangmanFrame extends javax.swing.JFrame implements Observer {

    
    private GenericPanel panel=null;
    private Session session;
    /**
     * Creates new form HangmanFrame
     */
    public HangmanFrame(Session session) {
        
        initComponents();
        this.session=session;
        this.showConnectionPanel();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    
    public void showConnectionPanel(){
        if(panel==null){
            panel=new ConnectionPanel(this.session);
        }
            
        this.setContentPane(panel);
        this.validate();
        
    }
    
     public void showMainPanel(){
        
        panel= new MainPanel(session);
        this.setContentPane(panel);
        this.validate();
    }
     
     
    
    @Override
    public void update(Observable o, Object arg) {
                 
        Session s=(Session)o;
        Event newEvent=(Event)arg;
        if(newEvent==Event.CONNECTIONOK){
            this.showMainPanel();
            System.out.println("CONNECTION ESTABLISHED");
        }
        if(newEvent==Event.CONNECTIONREFUSED){
            this.showConnectionPanel();
            JOptionPane.showMessageDialog(this, "CONNECTION NOT ESTABLISHED");
            System.out.println("CONNECTION NOT ESTABLISHED");
        }
        
        if(newEvent==Event.GAMERESPONSE){
            this.panel.updateView(newEvent);
            System.out.println("CONNECTION NOT ESTABLISHED");
        }
        
       
    }
}
